# 1)	Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

# def div_func():
#     try:
#         divs = float(input('Делимое: ')) / float(input('Делитель: '))
#     except ZeroDivisionError:
#         print('Деление на ноль!')
#         divs = 0
#     return divs
# result = div_func()
# print(result)

# 2)	Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как
# именованные аргументы. Реализовать вывод данных о пользователе одной строкой.

# def data_func(**kwargs):
#     return kwargs
# print(data_func(Name='Ivan', Surname='Ivanov', Birth=1980, City='SPb', Email='ii@mail.ru', Phone='555-44-66'))

# 3)	Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму
# наибольших двух аргументов.

# def my_func(var_1, var_2, var_3):
#     my_list = sorted([var_1, var_2, var_3])
#     print(my_list[1] + my_list[2])
# print(my_func(10,2,15))

# 4)	Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо
# выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
# Var_1:
# my_func = lambda x, y: x ** y
# print(my_func(5.2, -3))
# Var_2:
# def my_func():
#     x = float(input('X = '))
#     y = abs(int(input('Y = ')))
#     x_1 = x
#     for i in range(1, y):
#         x_1 = x_1 * x
#     return 1 / x_1
# print(my_func())
# print(pow(5, -4), pow(5, -2), pow(5, -1)) #проверка

# 5)	Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна
# выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится
# специальный символ, выполнение программы завершается. Если специальный символ введен после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
# def sum_func():
#     my_sum = 0
#     my_exit = True
#     while my_exit:
#         my_list = list(input('Введите числа: ').split(' '))
#         for i in range(0, len(my_list)):
#             if my_list[i] == '/':
#                 my_exit = False
#                 break
#             my_sum = my_sum + int(my_list[i])
#         print(my_sum)
# sum_func()

# 6)	Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

# int_func = (input('Введите слово: ')).capitalize
# print(int_func())

# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое
# слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно
# начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
# def int_func():
#     my_list = list(map(chr, range(97, 123)))
#     my_list.append(' ')
#     my_str = input('Введите текст: ')
#     for i in range(0, len(my_str)):
#         if my_str[i] in my_list:
#             continue
#         else:
#             my_str = 'Введены не латинские символы!'
#             break
#     my_str = my_str.title()
#     return my_str
# print(int_func())
