# 1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
# Об окончании ввода данных свидетельствует пустая строка.

# f = open('file_01.txt', 'w')
# data = []
# while True:
#     data_add = input('Введите данные: ')
#     if data_add == '':
#         break
#     data.append(data_add)
# f.writelines('\n'.join(data))
# f.close()

# 2. Создать текстовый файл (не программно), сохранить в нем несколько строк, выполнить подсчет количества строк,
# количества слов в каждой строке.

# f = open('file_02')
# lines = f.readlines()
# print(f'В файле {len(lines)} строк(-и)')
# for i, st in enumerate(lines):
#     words = st.count(' ', 0, len(st))+1
#     print(f'В строке {i+1} количество слов - {words}')
# f.close()

# 3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов
# (не менее 10 строк). Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников.
# Выполнить подсчет средней величины дохода сотрудников.

# f = open('file_03')
# lines = f.readlines()
# total = 0
# for i in lines:
#     i = i.strip()
#     i = i.split(' ')
#     total = total + float(i[1])
#     if float(i[1]) < 20000:
#         print(i[0])
# print('Средний доход:', round(total / len(lines)), 'руб.')
# f.close()

# 4. Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские. Новый блок строк должен записываться в новый
# текстовый файл.
#
# in_f = open('file_04', encoding='UTF-8')
# ln = in_f.readlines()
# my_list = []
# for el in ln:
#     my_list.append(el.split(' '))
# while True:
#     for i, x in enumerate(my_list):
#         if i == 0:
#             x[0] = 'Один'
#             my_list[i] = ' '.join(x)
#         if i == 1:
#             x[0] = 'Два'
#             my_list[i] = ' '.join(x)
#         if i == 2:
#             x[0] = 'Три'
#             my_list[i] = ' '.join(x)
#         if i == 3:
#             x[0] = 'Четыре'
#             my_list[i] = ' '.join(x)
#     else:
#         break
# in_f.close()
# out_f = open('file_04_1', 'w', encoding='UTF-8')
# out_f.writelines(''.join(my_list))
# out_f.close()
#
# 5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.

# with open('file_05.txt', 'w+') as f:
#     f.write('5 6 8 2 1')
#     f.seek(0)
#     print(sum(map(int, f.readline().split(' '))))

# 6. Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и
# наличие лекционных, практических и лабораторных занятий по этому предмету и их количество. Важно,
# чтобы для каждого предмета не обязательно были все типы занятий. Сформировать словарь, содержащий название
# предмета и общее количество занятий по нему. Вывести словарь на экран.
# Примеры строк файла: Информатика:   100(л)   50(пр)   20(лаб).
#                                         Физика:   30(л)   —   10(лаб)
#                                         Физкультура:   —   30(пр)   —
# Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

# 7. Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая строка должна содержать
# данные о фирме: название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1   ООО   10000   5000.
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. Если фирма
# получила убытки, в расчет средней прибыли ее не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней
# прибылью. Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
# Подсказка: использовать менеджер контекста.